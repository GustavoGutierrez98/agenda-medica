{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\del.sistemas_res\\\\Documents\\\\Proj\\\\agenda\\\\agenda-medica\\\\src\\\\components\\\\CalendarComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarComponent = ({\n  appointments\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Función para verificar si hay citas en una fecha específica\n  const hasAppointments = date => {\n    const dateString = date.toISOString().split(\"T\")[0]; // Formato YYYY-MM-DD\n    return appointments.some(appt => appt.date === dateString);\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const getAppointmentsForDate = date => {\n    const dateString = date.toISOString().split(\"T\")[0];\n    return appointments.filter(appt => appt.date === dateString);\n  };\n  const appointmentsForSelectedDate = selectedDate ? getAppointmentsForDate(selectedDate) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateChange // Maneja el clic en el día\n      ,\n      tileClassName: ({\n        date\n      }) => hasAppointments(date) ? \"highlight\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Citas del d\\xEDa:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), appointmentsForSelectedDate.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"appointment-list\",\n      children: appointmentsForSelectedDate.map((appt, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [appt.time, \" - \", appt.patient]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : selectedDate ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No hay citas para \", selectedDate.toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Seleccione un d\\xEDa para ver las citas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarComponent, \"rhrbPH1/NtfhiyDl62tZ0yGffOM=\");\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","CalendarComponent","appointments","_s","selectedDate","setSelectedDate","hasAppointments","date","dateString","toISOString","split","some","appt","handleDateChange","getAppointmentsForDate","filter","appointmentsForSelectedDate","className","children","onClickDay","tileClassName","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","time","patient","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/del.sistemas_res/Documents/Proj/agenda/agenda-medica/src/components/CalendarComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nconst CalendarComponent = ({ appointments }) => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  // Función para verificar si hay citas en una fecha específica\r\n  const hasAppointments = (date) => {\r\n    const dateString = date.toISOString().split(\"T\")[0]; // Formato YYYY-MM-DD\r\n    return appointments.some((appt) => appt.date === dateString);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const getAppointmentsForDate = (date) => {\r\n    const dateString = date.toISOString().split(\"T\")[0];\r\n    return appointments.filter((appt) => appt.date === dateString);\r\n  };\r\n\r\n  const appointmentsForSelectedDate = selectedDate\r\n    ? getAppointmentsForDate(selectedDate)\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <Calendar\r\n        onClickDay={handleDateChange} // Maneja el clic en el día\r\n        tileClassName={({ date }) =>\r\n          hasAppointments(date) ? \"highlight\" : null\r\n        }\r\n      />\r\n      <h2>Citas del día:</h2>\r\n      {appointmentsForSelectedDate.length > 0 ? (\r\n        <ul className=\"appointment-list\">\r\n          {appointmentsForSelectedDate.map((appt, index) => (\r\n            <li key={index}>\r\n              {appt.time} - {appt.patient}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : selectedDate ? (\r\n        <p>No hay citas para {selectedDate.toLocaleDateString()}</p>\r\n      ) : (\r\n        <p>Seleccione un día para ver las citas.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMS,eAAe,GAAIC,IAAI,IAAK;IAChC,MAAMC,UAAU,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAOR,YAAY,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,IAAI,KAAKC,UAAU,CAAC;EAC9D,CAAC;EAED,MAAMK,gBAAgB,GAAIN,IAAI,IAAK;IACjCF,eAAe,CAACE,IAAI,CAAC;EACvB,CAAC;EAED,MAAMO,sBAAsB,GAAIP,IAAI,IAAK;IACvC,MAAMC,UAAU,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnD,OAAOR,YAAY,CAACa,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACL,IAAI,KAAKC,UAAU,CAAC;EAChE,CAAC;EAED,MAAMQ,2BAA2B,GAAGZ,YAAY,GAC5CU,sBAAsB,CAACV,YAAY,CAAC,GACpC,EAAE;EAEN,oBACEJ,OAAA;IAAKiB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjClB,OAAA,CAACF,QAAQ;MACPqB,UAAU,EAAEN,gBAAiB,CAAC;MAAA;MAC9BO,aAAa,EAAEA,CAAC;QAAEb;MAAK,CAAC,KACtBD,eAAe,CAACC,IAAI,CAAC,GAAG,WAAW,GAAG;IACvC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACFxB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBR,2BAA2B,CAACS,MAAM,GAAG,CAAC,gBACrCzB,OAAA;MAAIiB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC7BF,2BAA2B,CAACU,GAAG,CAAC,CAACd,IAAI,EAAEe,KAAK,kBAC3C3B,OAAA;QAAAkB,QAAA,GACGN,IAAI,CAACgB,IAAI,EAAC,KAAG,EAAChB,IAAI,CAACiB,OAAO;MAAA,GADpBF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,GACHpB,YAAY,gBACdJ,OAAA;MAAAkB,QAAA,GAAG,oBAAkB,EAACd,YAAY,CAAC0B,kBAAkB,CAAC,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAE5DxB,OAAA;MAAAkB,QAAA,EAAG;IAAqC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CA9CIF,iBAAiB;AAAA8B,EAAA,GAAjB9B,iBAAiB;AAgDvB,eAAeA,iBAAiB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}