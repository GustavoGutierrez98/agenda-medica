{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\del.sistemas_res\\\\Documents\\\\Proj\\\\agenda\\\\agenda-medica\\\\src\\\\components\\\\CalendarComponent.js\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarComponent = ({\n  appointments\n}) => {\n  // Función para verificar si hay citas en una fecha específica\n  const hasAppointments = date => {\n    const dateString = date.toISOString().split(\"T\")[0]; // Formato YYYY-MM-DD\n    return appointments.some(appt => appt.date === dateString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      tileClassName: ({\n        date\n      }) => hasAppointments(date) ? \"highlight\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Citas del d\\xEDa:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"appointment-list\",\n      children: appointments.map((appt, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [appt.date, \" - \", appt.time, \" - \", appt.patient]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","Calendar","jsxDEV","_jsxDEV","CalendarComponent","appointments","hasAppointments","date","dateString","toISOString","split","some","appt","className","children","tileClassName","fileName","_jsxFileName","lineNumber","columnNumber","map","index","time","patient","_c","$RefreshReg$"],"sources":["C:/Users/del.sistemas_res/Documents/Proj/agenda/agenda-medica/src/components/CalendarComponent.js"],"sourcesContent":["import React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nconst CalendarComponent = ({ appointments }) => {\r\n  // Función para verificar si hay citas en una fecha específica\r\n  const hasAppointments = (date) => {\r\n    const dateString = date.toISOString().split(\"T\")[0]; // Formato YYYY-MM-DD\r\n    return appointments.some((appt) => appt.date === dateString);\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <Calendar\r\n        tileClassName={({ date }) =>\r\n          hasAppointments(date) ? \"highlight\" : null\r\n        }\r\n      />\r\n      <h2>Citas del día:</h2>\r\n      <ul className=\"appointment-list\">\r\n        {appointments.map((appt, index) => (\r\n          <li key={index}>\r\n            {appt.date} - {appt.time} - {appt.patient}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAC9C;EACA,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChC,MAAMC,UAAU,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAOL,YAAY,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,IAAI,KAAKC,UAAU,CAAC;EAC9D,CAAC;EAED,oBACEL,OAAA;IAAKU,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCX,OAAA,CAACF,QAAQ;MACPc,aAAa,EAAEA,CAAC;QAAER;MAAK,CAAC,KACtBD,eAAe,CAACC,IAAI,CAAC,GAAG,WAAW,GAAG;IACvC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACFhB,OAAA;MAAAW,QAAA,EAAI;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA;MAAIU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC7BT,YAAY,CAACe,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,kBAC5BlB,OAAA;QAAAW,QAAA,GACGF,IAAI,CAACL,IAAI,EAAC,KAAG,EAACK,IAAI,CAACU,IAAI,EAAC,KAAG,EAACV,IAAI,CAACW,OAAO;MAAA,GADlCF,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACK,EAAA,GAxBIpB,iBAAiB;AA0BvB,eAAeA,iBAAiB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}